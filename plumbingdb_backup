--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.12
-- Dumped by pg_dump version 9.5.12

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: get_locations(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_locations(cust integer) RETURNS TABLE(loc_id integer, addr character varying, zip character varying, city character varying, state character varying)
    LANGUAGE plpgsql
    AS $$
BEGIN
 return query select
 location_id, address, zipcode, area.city, area.state
from location natural join customer natural join area
where customer_id = cust;
END; $$;


ALTER FUNCTION public.get_locations(cust integer) OWNER TO postgres;

--
-- Name: set_status_assigned(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_status_assigned() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
update ticket
set status = 'Assigned'
from did_work
where ticket.ticket_id = did_work.ticket_id and
ticket.status = 'Unassigned';
return new;
end; $$;


ALTER FUNCTION public.set_status_assigned() OWNER TO postgres;

--
-- Name: set_status_closed(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_status_closed() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
update ticket
set status = 'Closed'
from invoice
where ticket.ticket_id = invoice.ticket_id;
return new;
end; $$;


ALTER FUNCTION public.set_status_closed() OWNER TO postgres;

SET default_tablespace = data;

SET default_with_oids = false;

--
-- Name: area; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.area (
    zipcode character varying(5) NOT NULL,
    city character varying(50),
    state character varying(2)
);


ALTER TABLE public.area OWNER TO postgres;

--
-- Name: billing_address; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.billing_address (
    customer_id integer NOT NULL,
    location_id integer NOT NULL
);


ALTER TABLE public.billing_address OWNER TO postgres;

--
-- Name: customer; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.customer (
    customer_id integer NOT NULL,
    first_name character varying(35) NOT NULL,
    last_name character varying(35) NOT NULL,
    phone character varying(10)
);


ALTER TABLE public.customer OWNER TO postgres;

--
-- Name: customer_customer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.customer_customer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.customer_customer_id_seq OWNER TO postgres;

--
-- Name: customer_customer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.customer_customer_id_seq OWNED BY public.customer.customer_id;


--
-- Name: customer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.customer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.customer_id_seq OWNER TO postgres;

--
-- Name: customerview; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.customerview AS
 SELECT customer.customer_id,
    customer.first_name,
    customer.last_name
   FROM public.customer
  ORDER BY customer.last_name;


ALTER TABLE public.customerview OWNER TO postgres;

--
-- Name: did_work; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.did_work (
    ticket_id integer NOT NULL,
    employee_id integer NOT NULL,
    start_time timestamp without time zone,
    end_time timestamp without time zone
);


ALTER TABLE public.did_work OWNER TO postgres;

--
-- Name: employee; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.employee (
    employee_id integer NOT NULL,
    fname character varying(35) NOT NULL,
    lname character varying(35) NOT NULL,
    phone character varying(10),
    active boolean NOT NULL
);


ALTER TABLE public.employee OWNER TO postgres;

--
-- Name: employee_employee_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.employee_employee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.employee_employee_id_seq OWNER TO postgres;

--
-- Name: employee_employee_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.employee_employee_id_seq OWNED BY public.employee.employee_id;


--
-- Name: employee_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.employee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.employee_id_seq OWNER TO postgres;

--
-- Name: invoice; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.invoice (
    invoice_number character varying(10) NOT NULL,
    ticket_id integer NOT NULL,
    invoice_total numeric(10,2) NOT NULL,
    invoice_date date NOT NULL,
    invoice_desc character varying(200),
    pay_method_id integer
);


ALTER TABLE public.invoice OWNER TO postgres;

--
-- Name: location; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.location (
    location_id integer NOT NULL,
    customer_id integer NOT NULL,
    address character varying(50) NOT NULL,
    zipcode character varying(5) NOT NULL
);


ALTER TABLE public.location OWNER TO postgres;

--
-- Name: ticket; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.ticket (
    ticket_id integer NOT NULL,
    location_id integer NOT NULL,
    problem_id integer NOT NULL,
    eta timestamp without time zone,
    status character varying(15) DEFAULT 'Unassigned'::character varying,
    received timestamp without time zone DEFAULT now()
);


ALTER TABLE public.ticket OWNER TO postgres;

--
-- Name: invoiceview; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.invoiceview AS
 SELECT customer.first_name,
    customer.last_name,
    invoice.invoice_number,
    invoice.invoice_date,
    invoice.invoice_total
   FROM (((public.invoice
     JOIN public.ticket USING (ticket_id))
     JOIN public.location USING (location_id))
     JOIN public.customer USING (customer_id));


ALTER TABLE public.invoiceview OWNER TO postgres;

--
-- Name: item_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.item_id_seq OWNER TO postgres;

--
-- Name: location_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.location_id_seq OWNER TO postgres;

--
-- Name: location_location_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.location_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.location_location_id_seq OWNER TO postgres;

--
-- Name: location_location_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.location_location_id_seq OWNED BY public.location.location_id;


--
-- Name: non_comm_item; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.non_comm_item (
    item_id integer NOT NULL,
    item_desc character varying(100),
    item_amount numeric(10,2)
);


ALTER TABLE public.non_comm_item OWNER TO postgres;

--
-- Name: non_comm_item_item_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.non_comm_item_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.non_comm_item_item_id_seq OWNER TO postgres;

--
-- Name: non_comm_item_item_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.non_comm_item_item_id_seq OWNED BY public.non_comm_item.item_id;


--
-- Name: problem; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.problem (
    problem_id integer NOT NULL,
    work_type character varying(50)
);


ALTER TABLE public.problem OWNER TO postgres;

--
-- Name: openticketview; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.openticketview AS
 SELECT ticket.ticket_id,
    location.address,
    customer.first_name,
    customer.last_name,
    problem.work_type,
    to_char(ticket.received, 'HH12:MI AM MM/DD/YY'::text) AS received,
    to_char(ticket.eta, 'HH12:MI AM MM/DD/YY'::text) AS eta,
    ticket.status,
    employee.fname,
    employee.lname
   FROM (((((public.ticket
     JOIN public.location USING (location_id))
     JOIN public.customer USING (customer_id))
     JOIN public.problem USING (problem_id))
     LEFT JOIN public.did_work ON ((ticket.ticket_id = did_work.ticket_id)))
     LEFT JOIN public.employee ON ((did_work.employee_id = employee.employee_id)))
  WHERE ((ticket.status)::text <> 'Closed'::text);


ALTER TABLE public.openticketview OWNER TO postgres;

--
-- Name: parts_used; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.parts_used (
    ticket_id integer NOT NULL,
    item_id integer NOT NULL
);


ALTER TABLE public.parts_used OWNER TO postgres;

--
-- Name: pay_method_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.pay_method_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.pay_method_id_seq OWNER TO postgres;

--
-- Name: payment_method; Type: TABLE; Schema: public; Owner: postgres; Tablespace: data
--

CREATE TABLE public.payment_method (
    pay_method_id integer NOT NULL,
    payment_type character varying(50) NOT NULL
);


ALTER TABLE public.payment_method OWNER TO postgres;

--
-- Name: payment_method_pay_method_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.payment_method_pay_method_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.payment_method_pay_method_id_seq OWNER TO postgres;

--
-- Name: payment_method_pay_method_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.payment_method_pay_method_id_seq OWNED BY public.payment_method.pay_method_id;


--
-- Name: problem_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.problem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.problem_id_seq OWNER TO postgres;

--
-- Name: problem_problem_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.problem_problem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.problem_problem_id_seq OWNER TO postgres;

--
-- Name: problem_problem_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.problem_problem_id_seq OWNED BY public.problem.problem_id;


--
-- Name: recentinvoiceview; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.recentinvoiceview AS
 SELECT invoice.invoice_number
   FROM public.invoice
  ORDER BY invoice.invoice_date
 LIMIT 20;


ALTER TABLE public.recentinvoiceview OWNER TO postgres;

--
-- Name: ticket_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ticket_id_seq OWNER TO postgres;

--
-- Name: ticket_ticket_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ticket_ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ticket_ticket_id_seq OWNER TO postgres;

--
-- Name: ticket_ticket_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ticket_ticket_id_seq OWNED BY public.ticket.ticket_id;


--
-- Name: customer_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer ALTER COLUMN customer_id SET DEFAULT nextval('public.customer_customer_id_seq'::regclass);


--
-- Name: employee_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.employee ALTER COLUMN employee_id SET DEFAULT nextval('public.employee_employee_id_seq'::regclass);


--
-- Name: location_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.location ALTER COLUMN location_id SET DEFAULT nextval('public.location_location_id_seq'::regclass);


--
-- Name: item_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.non_comm_item ALTER COLUMN item_id SET DEFAULT nextval('public.non_comm_item_item_id_seq'::regclass);


--
-- Name: pay_method_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment_method ALTER COLUMN pay_method_id SET DEFAULT nextval('public.payment_method_pay_method_id_seq'::regclass);


--
-- Name: problem_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.problem ALTER COLUMN problem_id SET DEFAULT nextval('public.problem_problem_id_seq'::regclass);


--
-- Name: ticket_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket ALTER COLUMN ticket_id SET DEFAULT nextval('public.ticket_ticket_id_seq'::regclass);


--
-- Data for Name: area; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.area (zipcode, city, state) FROM stdin;
93309	Bakersfield	CA
93307	Bakersfield	CA
93308	Bakersfield	CA
93311	Bakersfield	CA
93312	Bakersfield	CA
93313	Bakersfield	CA
93314	Bakersfield	CA
\.


--
-- Data for Name: billing_address; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.billing_address (customer_id, location_id) FROM stdin;
\.


--
-- Data for Name: customer; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.customer (customer_id, first_name, last_name, phone) FROM stdin;
1	john	doe	6613338395
2	Jerry	Cole	6613235628
3	Robert	Baratheon	6618374939
4	Gordon	Freeman	6619938473
5	Geralt	Rivia	6613982938
6	Lara	Croft	6614894829
\.


--
-- Name: customer_customer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.customer_customer_id_seq', 6, true);


--
-- Name: customer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.customer_id_seq', 1, false);


--
-- Data for Name: did_work; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.did_work (ticket_id, employee_id, start_time, end_time) FROM stdin;
6	4	\N	\N
11	2	\N	\N
9	5	\N	\N
5	1	\N	\N
10	5	\N	\N
\.


--
-- Data for Name: employee; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.employee (employee_id, fname, lname, phone, active) FROM stdin;
1	Chris	Park	6613329384	t
2	Samus	Aran	6613928395	t
3	Master	Chief	6618395838	t
4	Chris	Redfield	6616839828	t
5	Claire	Redfield	6613758393	t
\.


--
-- Name: employee_employee_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.employee_employee_id_seq', 5, true);


--
-- Name: employee_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.employee_id_seq', 1, true);


--
-- Data for Name: invoice; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.invoice (invoice_number, ticket_id, invoice_total, invoice_date, invoice_desc, pay_method_id) FROM stdin;
90013	6	175.00	2018-05-03	Repaired problem	3
90014	6	175.00	2018-05-03	Fixed mainline	2
\.


--
-- Name: item_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.item_id_seq', 1, false);


--
-- Data for Name: location; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.location (location_id, customer_id, address, zipcode) FROM stdin;
1	1	12312 Jensen Dr.	93309
2	1	512 Washington st	93309
4	6	5448 Main St	93313
5	5	1337 Center Ave	93308
6	6	245 Raven Dr	93311
7	4	9115 Market St	93312
8	2	128 Charles Ct	93309
9	3	4444 Water Canyon blvd	93306
\.


--
-- Name: location_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.location_id_seq', 1, false);


--
-- Name: location_location_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.location_location_id_seq', 9, true);


--
-- Data for Name: non_comm_item; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.non_comm_item (item_id, item_desc, item_amount) FROM stdin;
\.


--
-- Name: non_comm_item_item_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.non_comm_item_item_id_seq', 1, false);


--
-- Data for Name: parts_used; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.parts_used (ticket_id, item_id) FROM stdin;
\.


--
-- Name: pay_method_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.pay_method_id_seq', 1, false);


--
-- Data for Name: payment_method; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.payment_method (pay_method_id, payment_type) FROM stdin;
1	Cash
2	Check
3	Credit Card
4	E-Check
5	Charge
\.


--
-- Name: payment_method_pay_method_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.payment_method_pay_method_id_seq', 5, true);


--
-- Data for Name: problem; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.problem (problem_id, work_type) FROM stdin;
1	Mainline
2	Water Leak
3	Water Heater
4	Bath Tub
5	Faucet
6	Shower
7	Gas Line
\.


--
-- Name: problem_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.problem_id_seq', 1, false);


--
-- Name: problem_problem_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.problem_problem_id_seq', 7, true);


--
-- Data for Name: ticket; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.ticket (ticket_id, location_id, problem_id, eta, status, received) FROM stdin;
4	1	1	2018-04-21 15:30:00	Unassigned	2018-04-28 09:14:22.965322
7	4	3	\N	Unassigned	2018-05-06 15:18:01.975229
12	9	4	\N	Unassigned	2018-05-06 15:19:19.109398
11	6	3	\N	Assigned	2018-05-06 15:19:13.869928
9	5	2	\N	Assigned	2018-05-06 15:19:02.558227
5	2	1	2018-04-22 10:15:00	Closed	2018-04-28 09:14:47.428202
6	1	1	2018-04-22 08:15:00	Closed	2018-04-28 09:15:00.659674
10	8	5	\N	Assigned	2018-05-06 15:19:08.798049
\.


--
-- Name: ticket_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.ticket_id_seq', 1, true);


--
-- Name: ticket_ticket_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.ticket_ticket_id_seq', 12, true);


SET default_tablespace = '';

--
-- Name: area_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.area
    ADD CONSTRAINT area_pkey PRIMARY KEY (zipcode);


--
-- Name: billing_address_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_address
    ADD CONSTRAINT billing_address_pkey PRIMARY KEY (customer_id, location_id);


--
-- Name: customer_phone_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer
    ADD CONSTRAINT customer_phone_key UNIQUE (phone);


--
-- Name: customer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer
    ADD CONSTRAINT customer_pkey PRIMARY KEY (customer_id);


--
-- Name: employee_phone_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.employee
    ADD CONSTRAINT employee_phone_key UNIQUE (phone);


--
-- Name: employee_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.employee
    ADD CONSTRAINT employee_pkey PRIMARY KEY (employee_id);


--
-- Name: invoice_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invoice
    ADD CONSTRAINT invoice_pkey PRIMARY KEY (invoice_number);


--
-- Name: location_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.location
    ADD CONSTRAINT location_pkey PRIMARY KEY (location_id);


--
-- Name: non_comm_item_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.non_comm_item
    ADD CONSTRAINT non_comm_item_pkey PRIMARY KEY (item_id);


--
-- Name: parts_used_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.parts_used
    ADD CONSTRAINT parts_used_pkey PRIMARY KEY (ticket_id, item_id);


--
-- Name: payment_method_payment_type_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment_method
    ADD CONSTRAINT payment_method_payment_type_key UNIQUE (payment_type);


--
-- Name: payment_method_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment_method
    ADD CONSTRAINT payment_method_pkey PRIMARY KEY (pay_method_id);


--
-- Name: problem_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.problem
    ADD CONSTRAINT problem_pkey PRIMARY KEY (problem_id);


--
-- Name: problem_work_type_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.problem
    ADD CONSTRAINT problem_work_type_key UNIQUE (work_type);


--
-- Name: ticket_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket
    ADD CONSTRAINT ticket_pkey PRIMARY KEY (ticket_id);


--
-- Name: assigned_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER assigned_trigger AFTER INSERT ON public.did_work FOR EACH STATEMENT EXECUTE PROCEDURE public.set_status_assigned();


--
-- Name: closed_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER closed_trigger AFTER INSERT ON public.invoice FOR EACH STATEMENT EXECUTE PROCEDURE public.set_status_closed();


--
-- Name: billing_address_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_address
    ADD CONSTRAINT billing_address_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customer(customer_id);


--
-- Name: billing_address_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_address
    ADD CONSTRAINT billing_address_location_id_fkey FOREIGN KEY (location_id) REFERENCES public.location(location_id);


--
-- Name: did_work_employee_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.did_work
    ADD CONSTRAINT did_work_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);


--
-- Name: did_work_ticket_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.did_work
    ADD CONSTRAINT did_work_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.ticket(ticket_id);


--
-- Name: invoice_pay_method_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invoice
    ADD CONSTRAINT invoice_pay_method_id_fkey FOREIGN KEY (pay_method_id) REFERENCES public.payment_method(pay_method_id);


--
-- Name: invoice_ticket_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invoice
    ADD CONSTRAINT invoice_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.ticket(ticket_id);


--
-- Name: location_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.location
    ADD CONSTRAINT location_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customer(customer_id);


--
-- Name: parts_used_item_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.parts_used
    ADD CONSTRAINT parts_used_item_id_fkey FOREIGN KEY (item_id) REFERENCES public.non_comm_item(item_id);


--
-- Name: parts_used_ticket_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.parts_used
    ADD CONSTRAINT parts_used_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.ticket(ticket_id);


--
-- Name: ticket_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket
    ADD CONSTRAINT ticket_location_id_fkey FOREIGN KEY (location_id) REFERENCES public.location(location_id);


--
-- Name: ticket_problem_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket
    ADD CONSTRAINT ticket_problem_id_fkey FOREIGN KEY (problem_id) REFERENCES public.problem(problem_id);


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: TABLE area; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.area FROM PUBLIC;
REVOKE ALL ON TABLE public.area FROM postgres;
GRANT ALL ON TABLE public.area TO postgres;
GRANT ALL ON TABLE public.area TO plumbingdb;


--
-- Name: TABLE billing_address; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.billing_address FROM PUBLIC;
REVOKE ALL ON TABLE public.billing_address FROM postgres;
GRANT ALL ON TABLE public.billing_address TO postgres;
GRANT ALL ON TABLE public.billing_address TO plumbingdb;


--
-- Name: TABLE customer; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.customer FROM PUBLIC;
REVOKE ALL ON TABLE public.customer FROM postgres;
GRANT ALL ON TABLE public.customer TO postgres;
GRANT ALL ON TABLE public.customer TO plumbingdb;


--
-- Name: TABLE customerview; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.customerview FROM PUBLIC;
REVOKE ALL ON TABLE public.customerview FROM postgres;
GRANT ALL ON TABLE public.customerview TO postgres;
GRANT ALL ON TABLE public.customerview TO plumbingdb;


--
-- Name: TABLE did_work; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.did_work FROM PUBLIC;
REVOKE ALL ON TABLE public.did_work FROM postgres;
GRANT ALL ON TABLE public.did_work TO postgres;
GRANT ALL ON TABLE public.did_work TO plumbingdb;


--
-- Name: TABLE employee; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.employee FROM PUBLIC;
REVOKE ALL ON TABLE public.employee FROM postgres;
GRANT ALL ON TABLE public.employee TO postgres;
GRANT ALL ON TABLE public.employee TO plumbingdb;


--
-- Name: TABLE invoice; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.invoice FROM PUBLIC;
REVOKE ALL ON TABLE public.invoice FROM postgres;
GRANT ALL ON TABLE public.invoice TO postgres;
GRANT ALL ON TABLE public.invoice TO plumbingdb;


--
-- Name: TABLE location; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.location FROM PUBLIC;
REVOKE ALL ON TABLE public.location FROM postgres;
GRANT ALL ON TABLE public.location TO postgres;
GRANT ALL ON TABLE public.location TO plumbingdb;


--
-- Name: TABLE ticket; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.ticket FROM PUBLIC;
REVOKE ALL ON TABLE public.ticket FROM postgres;
GRANT ALL ON TABLE public.ticket TO postgres;
GRANT ALL ON TABLE public.ticket TO plumbingdb;


--
-- Name: TABLE invoiceview; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.invoiceview FROM PUBLIC;
REVOKE ALL ON TABLE public.invoiceview FROM postgres;
GRANT ALL ON TABLE public.invoiceview TO postgres;
GRANT ALL ON TABLE public.invoiceview TO plumbingdb;


--
-- Name: TABLE non_comm_item; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.non_comm_item FROM PUBLIC;
REVOKE ALL ON TABLE public.non_comm_item FROM postgres;
GRANT ALL ON TABLE public.non_comm_item TO postgres;
GRANT ALL ON TABLE public.non_comm_item TO plumbingdb;


--
-- Name: TABLE problem; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.problem FROM PUBLIC;
REVOKE ALL ON TABLE public.problem FROM postgres;
GRANT ALL ON TABLE public.problem TO postgres;
GRANT ALL ON TABLE public.problem TO plumbingdb;


--
-- Name: TABLE openticketview; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.openticketview FROM PUBLIC;
REVOKE ALL ON TABLE public.openticketview FROM postgres;
GRANT ALL ON TABLE public.openticketview TO postgres;
GRANT ALL ON TABLE public.openticketview TO plumbingdb;


--
-- Name: TABLE parts_used; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.parts_used FROM PUBLIC;
REVOKE ALL ON TABLE public.parts_used FROM postgres;
GRANT ALL ON TABLE public.parts_used TO postgres;
GRANT ALL ON TABLE public.parts_used TO plumbingdb;


--
-- Name: TABLE payment_method; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.payment_method FROM PUBLIC;
REVOKE ALL ON TABLE public.payment_method FROM postgres;
GRANT ALL ON TABLE public.payment_method TO postgres;
GRANT ALL ON TABLE public.payment_method TO plumbingdb;


--
-- Name: TABLE recentinvoiceview; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.recentinvoiceview FROM PUBLIC;
REVOKE ALL ON TABLE public.recentinvoiceview FROM postgres;
GRANT ALL ON TABLE public.recentinvoiceview TO postgres;
GRANT ALL ON TABLE public.recentinvoiceview TO plumbingdb;


--
-- PostgreSQL database dump complete
--

